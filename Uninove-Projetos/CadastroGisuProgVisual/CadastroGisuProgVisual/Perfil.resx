<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAyLo3AMa4MADGuDEtx7k0ici6N8/IujjxyLo4+Mi6OOnIuje8yLo3asi6OBbIujcAyLs5AAAA
        AAAAAAAAyLo4AMi6OAbHuTRnzcBK28/CUP7Iujn/yLo3/8i6OP/Iujf/yrw+/8i7OfnIuje+yLo4O8a2
        LwDIuzkAAAAAAMi6OQTHuTRz0cVX9vHuzf/189v/z8NS/8i5Nv/Iujj/yLo2/87CT//XzW//yLo4/8i6
        N93Iujg9yLo3AAAAAADIuTZFybs76+rltP//////7em+/8u+Q//Iujf/yLo4/8i6N//Juzr/5N6e/9zT
        gf/Iujf/yLo3wMi6OBMAAAAAx7k0rNDEVf/6+e3/8/DU/87CT//IuTb/yLo4/8i6N//Iujj/x7k1/9TJ
        ZP/29OD/29F7/8i6NvrIujdRVjcAAMe5NOTWy2n//Pvz/9vRe//HuTT/yLo4/8i6OP/Iujj/yLo4/8i6
        N//Juzr/6+a4//r57f/Zz3T/x7k0gc3ARADHuTTn1ctn//bz3f/Owk//yLk2/8i6OP/Iujj/yLo4/8i6
        OP/Iujj/x7k1/9bLaf/8+/T/+Pfn/97Vh7rIujoax7k1q8/DU//u6sP/zMBI/8i6N//Iujf/yLo3/8i6
        N//Iujj/yLo3/8e5NP/OwU3/9fLZ///////18tr/1ctooMi6Nj/JvDzn49yb/9DDU//IuTb/yLo4/8i6
        OP/Iujj/yLo3/8m8PP/XzW7/8e3L//389//z8NT04tuWpNDEVDvIujkDx7k0fNLGW/zRxln/yLk2/8i6
        N//Iujf/yLo3/8e5Nf/UyWP/+ffp//7++//m36To08hgW7GdAAjTyF8AyLo4AMi6NhDIuzmsyrw9/8i6
        N//Iujj/yLo4/8i6OP/Iujf/ybw8/+DYjv/7+e//49yZ0LyrExTCsysAnIIAAAAAAADHuTYAyLo3Ici6
        N8LIujj/yLo4/8i6OP/Iujj/yLo4/8i6N//Iujj64dmT4/Luz/zXzW5sAAAAAAAAAAAAAAAAyLo3AMi6
        OADIujcsyLo4y8i6OP/Iujj/yLo4/8i6OP/Iujj8yLo3lcm7OzHk3Zy44tuW18q9Qh/HuTQAAAAAAAAA
        AADIujcAyLo3AMi6OC/IujjJyLo4/8i6OP/Iujj7yLo4lsi6OA/Pw08Ayr1BHNjOcbDPw1GBxrgyAgAA
        AAAAAAAAAAAAAMi6OADIujgAyLo3Ksi6N77Iujf0yLo3isi6OA3IujgAim0AANLHWwDHuTUZybs6hsi6
        OC0AAAAAAAAAAAAAAAAAAAAAyLo3AMi6OADIujcmyLo4Yci6OArIujgAAAAAAAAAAACPeQAAy71BAMi6
        NhPIujga4A8AAIAHAAAAAwAAAAEAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAEAAIADAADAAwAA4AEAAPAQ
        AAD4OAAA/HwAAA==
</value>
  </data>
</root>